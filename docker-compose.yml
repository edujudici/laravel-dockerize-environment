version: "3"

services:
  # App php-fpm service
  app:
    build:
      context: ./docker/php
      args:
        APP_ENV: ${APP_ENV}
        PHP_VERSION: ${PHP_VERSION}
        REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
        USER: ${USER}
    container_name: app
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}
      - ./docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    env_file: .env
    ports:
      - 9001:9001
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped    
    links:
      - "db:db"
    depends_on:
      - db
    ports:
      - "8089:80"
    networks:
      - app-network

# Docker Volumes
volumes:
  dbdata:
    driver: local

# Docker Networks
networks:
  app-network:
    driver: bridge
